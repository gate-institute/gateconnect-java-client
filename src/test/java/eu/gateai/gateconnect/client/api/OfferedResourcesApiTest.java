/*
 * Dataspace Connector
 * IDS Connector reference implementation
 *
 * The version of the OpenAPI document: 8.0.2
 * Contact: support@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.gateai.gateconnect.client.api;

import eu.gateai.gateconnect.client.ApiException;
import org.openapitools.client.model.OfferedResourceDesc;
import org.openapitools.client.model.OfferedResourceView;
import org.openapitools.client.model.PagedModelBrokerView;
import org.openapitools.client.model.PagedModelCatalogView;
import org.openapitools.client.model.PagedModelContractView;
import org.openapitools.client.model.PagedModelOfferedResourceView;
import org.openapitools.client.model.PagedModelRepresentationView;
import org.openapitools.client.model.PagedModelSubscriptionView;
import java.net.URI;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OfferedResourcesApi
 */
@Disabled
public class OfferedResourcesApiTest {

    private final OfferedResourcesApi api = new OfferedResourcesApi();

    /**
     * Add a list of children to a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addResources7Test() throws ApiException {
        UUID id = null;
        List<URI> URI = null;
        PagedModelRepresentationView response = api.addResources7(id, URI);
        // TODO: test validations
    }

    /**
     * Add a list of children to a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addResources8Test() throws ApiException {
        UUID id = null;
        List<URI> URI = null;
        PagedModelContractView response = api.addResources8(id, URI);
        // TODO: test validations
    }

    /**
     * Add a list of children to a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addResources9Test() throws ApiException {
        UUID id = null;
        List<URI> URI = null;
        PagedModelCatalogView response = api.addResources9(id, URI);
        // TODO: test validations
    }

    /**
     * Create a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void create4Test() throws ApiException {
        OfferedResourceDesc offeredResourceDesc = null;
        OfferedResourceView response = api.create4(offeredResourceDesc);
        // TODO: test validations
    }

    /**
     * Delete a base resource by id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void delete5Test() throws ApiException {
        UUID id = null;
        api.delete5(id);
        // TODO: test validations
    }

    /**
     * Get a base resource by id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void get5Test() throws ApiException {
        UUID id = null;
        OfferedResourceView response = api.get5(id);
        // TODO: test validations
    }

    /**
     * Get a list of base resources with pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAll5Test() throws ApiException {
        Integer page = null;
        Integer size = null;
        PagedModelOfferedResourceView response = api.getAll5(page, size);
        // TODO: test validations
    }

    /**
     * Get all children of a base resource with pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResource10Test() throws ApiException {
        UUID id = null;
        Integer page = null;
        Integer size = null;
        PagedModelSubscriptionView response = api.getResource10(id, page, size);
        // TODO: test validations
    }

    /**
     * Get all children of a base resource with pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResource11Test() throws ApiException {
        UUID id = null;
        Integer page = null;
        Integer size = null;
        PagedModelRepresentationView response = api.getResource11(id, page, size);
        // TODO: test validations
    }

    /**
     * Get all children of a base resource with pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResource12Test() throws ApiException {
        UUID id = null;
        Integer page = null;
        Integer size = null;
        PagedModelContractView response = api.getResource12(id, page, size);
        // TODO: test validations
    }

    /**
     * Get all children of a base resource with pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResource13Test() throws ApiException {
        UUID id = null;
        Integer page = null;
        Integer size = null;
        PagedModelCatalogView response = api.getResource13(id, page, size);
        // TODO: test validations
    }

    /**
     * Get all children of a base resource with pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResource14Test() throws ApiException {
        UUID id = null;
        Integer page = null;
        Integer size = null;
        PagedModelBrokerView response = api.getResource14(id, page, size);
        // TODO: test validations
    }

    /**
     * Remove a list of children from a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeResources7Test() throws ApiException {
        UUID id = null;
        List<URI> URI = null;
        api.removeResources7(id, URI);
        // TODO: test validations
    }

    /**
     * Remove a list of children from a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeResources8Test() throws ApiException {
        UUID id = null;
        List<URI> URI = null;
        api.removeResources8(id, URI);
        // TODO: test validations
    }

    /**
     * Remove a list of children from a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeResources9Test() throws ApiException {
        UUID id = null;
        List<URI> URI = null;
        api.removeResources9(id, URI);
        // TODO: test validations
    }

    /**
     * Replace the children of a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceResources7Test() throws ApiException {
        UUID id = null;
        List<URI> URI = null;
        api.replaceResources7(id, URI);
        // TODO: test validations
    }

    /**
     * Replace the children of a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceResources8Test() throws ApiException {
        UUID id = null;
        List<URI> URI = null;
        api.replaceResources8(id, URI);
        // TODO: test validations
    }

    /**
     * Replace the children of a base resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceResources9Test() throws ApiException {
        UUID id = null;
        List<URI> URI = null;
        api.replaceResources9(id, URI);
        // TODO: test validations
    }

    /**
     * Update a base resource by id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void update5Test() throws ApiException {
        UUID id = null;
        OfferedResourceDesc offeredResourceDesc = null;
        OfferedResourceView response = api.update5(id, offeredResourceDesc);
        // TODO: test validations
    }

}
